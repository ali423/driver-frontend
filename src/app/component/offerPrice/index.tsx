import React, { FC } from "react";
import styles from "./style.module.scss";
import { formatPrice, toPersian } from "@/app/function";

interface IOfferPrice {
  price: number;
  hasRefer: boolean;
  score: number;
  step: string;
}

const OfferPrice: FC<IOfferPrice> = ({ price, hasRefer, score, step }) => {
  return (
    <div
      className={`${styles.offerPriceContainer} ${
        step === "next" ? styles.next : styles.prev
      }`}
    >
      <p className={styles.arrow}>
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="16"
          height="16"
          viewBox="0 0 16 16"
          fill="none"
        >
          <path
            d="M5.57812 12.2918L6.52095 13.2346L11.7555 7.99992L6.52094 2.76541L5.57813 3.70822L9.86984 7.99993L5.57812 12.2918Z"
            fill="white"
          />
        </svg>
      </p>
      <p className={styles.price}>
        {hasRefer && (
          <span className={styles.score}>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="20"
              height="20"
              viewBox="0 0 20 20"
              fill="none"
            >
              <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M17.5 10C17.5 14.1421 14.1422 17.5 10 17.5C5.8579 17.5 2.50004 14.1421 2.50004 10C2.50004 5.85787 5.8579 2.50001 10 2.50001C14.1422 2.50001 17.5 5.85787 17.5 10ZM19.1667 10C19.1667 15.0626 15.0626 19.1667 10 19.1667C4.93743 19.1667 0.833374 15.0626 0.833374 10C0.833374 4.9374 4.93743 0.833344 10 0.833344C15.0626 0.833344 19.1667 4.9374 19.1667 10Z"
                fill="white"
              />
              <path
                d="M5.92087 8.9925C6.03587 10.0625 6.11587 10.7675 6.16087 11.1075C6.19087 11.3575 6.22587 11.5425 6.26587 11.6625C6.31087 11.7825 6.37337 11.865 6.45337 11.91C6.53837 11.95 6.66087 11.97 6.82087 11.97H6.94837L7.00837 12.5325L6.94837 13.0875H6.82087C6.37587 13.0875 6.03337 12.9475 5.79337 12.6675C5.55837 12.3825 5.40087 11.9125 5.32087 11.2575L5.26837 10.86L5.05087 9.18L5.92087 8.9925ZM5.80837 12.57C5.48837 12.675 5.17587 12.7275 4.87087 12.7275C4.42087 12.7275 4.05087 12.62 3.76087 12.405C3.47587 12.185 3.33337 11.8875 3.33337 11.5125C3.33337 11.0525 3.51337 10.665 3.87337 10.35C4.23837 10.035 4.72087 9.7675 5.32087 9.5475L5.53087 10.5225C5.19587 10.6025 4.88587 10.72 4.60087 10.875C4.32087 11.025 4.17337 11.1675 4.15837 11.3025C4.14837 11.4125 4.20337 11.505 4.32337 11.58C4.44337 11.65 4.60837 11.685 4.81837 11.685C5.06337 11.685 5.32087 11.63 5.59087 11.52L5.80837 12.57Z"
                fill="white"
              />
              <path
                d="M9.15771 10.4625C9.42271 10.8775 9.64021 11.19 9.81021 11.4C9.98521 11.61 10.1427 11.7575 10.2827 11.8425C10.4277 11.9275 10.5852 11.97 10.7552 11.97H10.8827L10.9427 12.5325L10.8827 13.0875H10.7552C10.5152 13.0875 10.2877 13.0175 10.0727 12.8775C9.86271 12.7375 9.64771 12.53 9.42771 12.255C9.20771 11.975 8.94521 11.59 8.64021 11.1L9.15771 10.4625ZM10.3502 8.3925L8.18271 9.315C8.34771 9.455 8.53521 9.6475 8.74521 9.8925C8.96021 10.1325 9.15021 10.405 9.31521 10.71C9.48521 11.015 9.57021 11.31 9.57021 11.595C9.57021 11.68 9.55771 11.7775 9.53271 11.8875C9.43271 12.2925 9.16771 12.595 8.73771 12.795C8.30771 12.99 7.76771 13.0875 7.11771 13.0875H6.86271V11.97H7.11771C7.54271 11.97 7.89521 11.9375 8.17521 11.8725C8.45521 11.8025 8.64021 11.71 8.73021 11.595C8.69021 11.355 8.54271 11.07 8.28771 10.74C8.03271 10.41 7.65771 10.045 7.16271 9.645L7.26771 8.67L10.0502 7.5L10.3502 8.3925Z"
                fill="white"
              />
              <path
                d="M15.0105 11.97C15.1555 11.97 15.2705 11.9275 15.3555 11.8425C15.4405 11.7575 15.483 11.6475 15.483 11.5125C15.483 11.3775 15.4305 11.1625 15.3255 10.8675C15.2255 10.5725 15.1405 10.3475 15.0705 10.1925L15.8355 9.7725C15.9305 9.9675 16.0305 10.2475 16.1355 10.6125C16.2405 10.9725 16.293 11.2875 16.293 11.5575C16.293 11.8375 16.238 12.095 16.128 12.33C16.018 12.56 15.8655 12.745 15.6705 12.885C15.4755 13.02 15.2555 13.0875 15.0105 13.0875H14.988V11.97H15.0105ZM12.978 13.0875L12.918 12.5325L12.978 11.97H13.0155C13.2705 11.97 13.468 11.8325 13.608 11.5575C13.703 11.3675 13.788 11.075 13.863 10.68L14.6355 10.7175C14.5805 11.0475 14.553 11.2825 14.553 11.4225C14.553 11.7875 14.7055 11.97 15.0105 11.97H15.0255L15.0855 12.5325L15.0255 13.0875H15.0105C14.7405 13.0875 14.513 13.015 14.328 12.87C14.143 12.725 14.013 12.52 13.938 12.255L14.1255 12.24C13.8205 12.805 13.443 13.0875 12.993 13.0875H12.978ZM10.833 13.0875L10.773 12.5325L10.833 11.97H10.8705C11.0255 11.97 11.178 11.9375 11.328 11.8725C11.478 11.8025 11.5905 11.7175 11.6655 11.6175C11.7705 11.4975 11.8505 11.3625 11.9055 11.2125C11.9605 11.0625 12.0105 10.9025 12.0555 10.7325L12.8355 10.815C12.8305 10.84 12.803 10.94 12.753 11.115C12.703 11.285 12.678 11.44 12.678 11.58C12.678 11.84 12.783 11.97 12.993 11.97H13.008L13.068 12.5325L13.008 13.0875H12.9705C12.7555 13.0875 12.568 13.03 12.408 12.915C12.248 12.8 12.1355 12.6475 12.0705 12.4575C11.9105 12.6625 11.7255 12.82 11.5155 12.93C11.3105 13.035 11.0905 13.0875 10.8555 13.0875H10.833Z"
                fill="white"
              />
              <path
                d="M7.13163 6.31334C7.08663 6.41834 7.06413 6.51334 7.06413 6.59834C7.06413 6.65334 7.08163 6.69834 7.11663 6.73334C7.15163 6.76834 7.19913 6.78584 7.25913 6.78584C7.44413 6.78584 7.53663 6.65584 7.53663 6.39584C7.53663 6.33584 7.53413 6.28834 7.52913 6.25334L7.88163 6.19334C7.92163 6.54834 8.03163 6.72584 8.21163 6.72584C8.27663 6.72584 8.32663 6.71084 8.36163 6.68084C8.39663 6.64584 8.41413 6.59834 8.41413 6.53834C8.41413 6.51834 8.40913 6.48834 8.39913 6.44834C8.37413 6.37334 8.30413 6.23584 8.18913 6.03584L8.54163 5.83334C8.62663 5.97334 8.69163 6.09584 8.73663 6.20084C8.78663 6.30584 8.81163 6.41834 8.81163 6.53834C8.81163 6.73334 8.75913 6.89584 8.65413 7.02584C8.55413 7.15584 8.41163 7.22084 8.22663 7.22084C8.06663 7.22084 7.92663 7.16334 7.80663 7.04834C7.68663 6.93334 7.61913 6.76334 7.60413 6.53834L7.85163 6.53084C7.85663 6.74084 7.79913 6.91584 7.67913 7.05584C7.56413 7.19584 7.42413 7.26584 7.25913 7.26584C7.06913 7.26584 6.92413 7.21084 6.82413 7.10084C6.71913 6.98584 6.66663 6.84834 6.66663 6.68834C6.66663 6.53334 6.70413 6.36334 6.77913 6.17834L7.13163 6.31334Z"
                fill="white"
              />
            </svg>
            <span>{toPersian(score)}</span>
            <span>+</span>
          </span>
        )}
        <span>{toPersian(formatPrice(price))}</span>
      </p>
    </div>
  );
};

export default OfferPrice;
